name: CI/CD pipeline for Multi-Module Project in develop

on:
  push:
    branches:
      - 'feature/**'

jobs:
  validate-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Git
        run: |
          git config --global user.name "Sebastião Fidencio"
          git config --global user.email "sfidencio@gmail.com"
      - name: Validate commit message
        run: |
          git log -1 --pretty=%B | grep -qE '^(feat|fix|docs|style|refactor|perf|test|chore|ci)\([a-z0-9_-]+\): .+'
          if [ $? -ne 0 ]; then
            echo "**********************************"
            echo "Formato de mensagem de commit inválido."
            echo "Use o formato: tipo(escopo): mensagem"
            echo "Exemplos:"
            echo "  feat(user): add login feature"
            echo "  fix(api): fix status code"
            echo "  docs(readme): update docs"
            echo "**********************************"
            echo "Para corrigir a mensagem de commit, use o seguinte comando:"
            echo "git commit --amend -m 'feat(user): add login feature'"
            echo "Ou via rebase interativo:"
            echo "git rebase -i HEAD~n"
            echo "Onde 'n' é o número de commits a serem corrigidos."
            echo "Em seguida altera a mensagem e mude 'pick' para 'reword'."
            echo "Depois faça o push forçado:"
            exit 1
          fi
#  check-merge-conflicts:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Set up Git
#        run: |
#          git config --global user.name "Sebastião Fidencio"
#          git config --global user.email "sfidencio@gmail.com"
#      - name: Check for merge conflicts
#        run: |
#          git fetch origin develop
#          git merge --no-commit --no-ff origin/develop || {
#            echo "**********************************"
#            echo "Conflitos de mesclagem detectados."
#            echo "Resolva os conflitos antes de continuar."
#            echo "**********************************"
#            exit 1
#          }
#          git merge --abort
  build-and-test:
    runs-on: ubuntu-latest
    needs: [validate-commit]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build and Test Maven Project
        run: mvn verify
  #https://github.com/marketplace/actions/create-pull-request
  create-pull-request:
    runs-on: ubuntu-latest
    needs: [ build-and-test ]
    if: ${{ success() }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "Create Pull Request for feature branch"
          branch: ${{ github.ref }}
          base: develop
          title: "Pull Request for feature branch"
          body: "This PR is automatically created by the CI workflow da branch feature/${{ github.ref }} to develop"
name: CI/CD pipeline for Multi-Module Project in develop

on:
  push:
    branches:
      - develop

jobs:
  validate-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Git
        run: |
          git config --global user.name "Sebastião Fidencio"
          git config --global user.email "sfidencio@gmail.com"

      - name: Validate commit message
        run: |
          git log -1 --pretty=%B | grep -qE '^(feat|fix|docs|style|refactor|perf|test|chore|ci)\([a-z0-9_-]+\): .+'
          if [ $? -ne 0 ]; then
            echo "**********************************"
            echo "Formato de mensagem de commit inválido."
            echo "Use o formato: tipo(escopo): mensagem"
            echo "Exemplos:"
            echo "  feat(user): add login feature"
            echo "  fix(api): fix status code"
            echo "  docs(readme): update docs"
            echo "**********************************"
            echo "Para corrigir a mensagem de commit, use o seguinte comando:"
            echo "git commit --amend -m 'feat(user): add login feature'"
            echo "Ou via rebase interativo:"
            echo "git rebase -i HEAD~n"
            echo "Onde 'n' é o número de commits a serem corrigidos."
            echo "Em seguida altera a mensagem e mude 'pick' para 'reword'."
            echo "Depois faça o push forçado:"
            exit 1
          fi
      - name: Check for merge conflicts
        run: |
          git fetch origin develop
          git merge-base --is-ancestor origin/develop HEAD
          if [ $? -ne 0 ]; then
            echo "**********************************"
            echo "Conflitos de mesclagem detectados."
            echo "Resolva os conflitos antes de continuar."
            echo "**********************************"
            exit 1
          fi
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test Maven Project
        run: mvn clean verify

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: 12a34201cee5f0c0a3af692cccc0cc4b15d77539
        run: |
          mvn sonar:sonar \
            -Dsonar.organization=sfidencio \
            -Dsonar.projectKey=sfidencio_mvp-ecommerce-java-backend \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=develop \
            -Dsonar.analysis.mode=publish
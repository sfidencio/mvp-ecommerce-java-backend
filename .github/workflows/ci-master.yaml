name: CD tag, release, sonar, docker image and deploy

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=sfidencio_mvp-ecommerce-java-backend
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Pcoverage
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Package Maven Project
        run: mvn package -DskipTests=true



  create-tag-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Get Maven Version
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
          if [[ -z "$VERSION" ]]; then
            echo "::error::Failed to extract Maven version from pom.xml"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          VERSION: ${{ steps.get_version.outputs.version }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            Release for version ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
        id: create_release_action  # Add an ID for checking the outcome
        continue-on-error: false  # Fail the job if release creation fails

      - name: Check Release Creation
        if: steps.create_release_action.outcome != 'success'
        run: |
          echo "::error::Failed to create release. See the previous step for details."
          exit 1

#  build-and-push-docker:
#    runs-on: ubuntu-latest
#    needs: [create-tag]
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Log in to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Build and Push Docker Image
#        run: |
#          IMAGE_NAME=sfidencio/mvp-ecommerce-java-backend:${{ steps.create_tag.outputs.TAG_NAME }}
#          docker build -t $IMAGE_NAME .
#          docker push $IMAGE_NAME